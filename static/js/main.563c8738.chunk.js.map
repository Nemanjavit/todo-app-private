{"version":3,"sources":["components/Input.jsx","Utils/itemTypes.js","svgs/CrossIcon.jsx","components/Task.jsx","components/BottomNav.jsx","components/Tasklist.jsx","components/All.jsx","components/Completed.jsx","components/Active.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","changeHandler","value","name","clickHandler","keydown","className","onClick","autocomplete","onKeyDown","type","onChange","ItemTypes","CrossIcon","xmlns","width","height","fill","fillRule","d","Task","doneHandler","deleteHandler","isFinished","index","moveTask","id","ref","useRef","useDrop","accept","collect","monitor","handlerId","getHandlerId","hover","item","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","console","log","drop","useDrag","isDragging","drag","BottomNav","list","clearCompleted","lg","xl","xxl","nogutter","justify","align","length","activeClassName","to","process","exact","xs","sm","md","Tasklist","useContext","TaskContext","settasklist","tasklist","debounce","require","useCallback","dragTask","update","$splice","map","task","i","newlist","filter","doneTask","updatedlist","onDelete","updatedList","All","Completed","completedTasks","Active","useState","activeTasks","createContext","App","settask","isDark","setIsDark","createTask","Math","random","toFixed","backGroundImage","body","document","getElementsByTagName","window","innerWidth","style","backgroundImage","useEffect","onload","onresize","Provider","basename","DndProvider","backend","HTML5Backend","classList","toggle","e","target","keyCode","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uQAmBeA,EAjBD,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,cAAeC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAC1D,OACC,sBAAKC,UAAU,iBAAf,UACC,wBAAQA,UAAU,gBAAgBC,QAASH,IAC3C,uBACCI,aAAa,MACbC,UAAWJ,EACXC,UAAU,QACVI,KAAK,OACLC,SAAUV,EACVC,MAAOA,EACPC,KAAMA,QCbGS,EACN,O,gBCaQC,EAZG,WACjB,OACC,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAA1D,SACC,sBACCC,KAAK,UACLC,SAAS,UACTC,EAAE,uI,QCyFSC,EA3FF,SAAC,GAQP,IAPNC,EAOK,EAPLA,YACAC,EAMK,EANLA,cACAC,EAKK,EALLA,WACApB,EAIK,EAJLA,KACAqB,EAGK,EAHLA,MACAC,EAEK,EAFLA,SACAC,EACK,EADLA,GAEMC,EAAMC,iBAAO,MAEnB,EAA8BC,YAAQ,CACrCC,OAAQlB,EACRmB,QAFqC,SAE7BC,GACP,MAAO,CACNC,UAAWD,EAAQE,iBAGrBC,MAPqC,SAO/BC,EAAMJ,GAAU,IAAD,EACpB,GAAKL,EAAIU,QAAT,CAIA,IAAMC,EAAYF,EAAKZ,MACjBe,EAAaf,EAInB,GAAIc,IAAcC,EAAlB,CAIA,IAAMC,EAAiB,UAAGb,EAAIU,eAAP,aAAG,EAAaI,wBAEjCC,GACJF,EAAkBG,OAASH,EAAkBI,KAAO,EAIhDC,EAFeb,EAAQc,kBAEKC,EAAIP,EAAkBI,IACxDI,QAAQC,IAAIJ,GAMRP,EAAYC,GAAcM,EAAeH,GAIzCJ,EAAYC,GAAcM,EAAeH,IAG7CjB,EAASa,EAAWC,GAEpBH,EAAKZ,MAAQe,QA5Cf,mBAASN,EAAT,KAASA,UAAaiB,EAAtB,KAgDA,EAA+BC,YAAQ,CACtCzC,KAAME,EACNwB,KAAM,WACL,MAAO,CAAEV,KAAIF,UAEdO,QAAS,SAACC,GAAD,MAAc,CACtBoB,WAAYpB,EAAQoB,iBANtB,wBAASA,WAWT,OAFAC,EATA,MASKH,EAAKvB,IAGT,qBAAIrB,UAAU,iBAAiBqB,IAAKA,EAAK,kBAAiBM,EAA1D,UACC,wBACC3B,UAAS,uBAAkBiB,EAAa,OAAS,IACjDhB,QAASc,EAFV,SAIEE,EAAa,cAAC,IAAD,IAAc,OAE5BA,EACA,wBAAQjB,UAAU,aAAlB,SAAgCH,IAEhC,+BAAOA,IAGR,wBAAQG,UAAU,iBAAiBC,QAASe,EAA5C,SACC,cAAC,EAAD,U,yBCNWgC,EAjFG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,eAC1B,OACC,sBAAKlD,UAAU,SAAf,UACC,cAAC,UAAD,CAASmD,IAAE,EAACC,IAAE,EAACC,KAAG,EAAlB,SACC,eAAC,MAAD,CAAKC,UAAQ,EAACC,QAAQ,UAAUC,MAAM,SAASxD,UAAU,YAAzD,UACC,oBAAGA,UAAU,cAAb,UAA4BiD,EAAKQ,OAAjC,iBACA,sBAAKzD,UAAU,mBAAf,UACC,cAAC,IAAD,CACC0D,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAIC,8BACJC,OAAK,EAJN,uBAQA,cAAC,IAAD,CACCH,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAIC,qBACJC,OAAK,EAJN,iBAQA,cAAC,IAAD,CACCH,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAIC,2BACJC,OAAK,EAJN,uBASD,wBAAQ7D,UAAU,oBAAoBC,QAASiD,EAA/C,kCAMF,eAAC,UAAD,CAASY,IAAE,EAACC,IAAE,EAACC,IAAE,EAAjB,UACC,eAAC,MAAD,CAAKV,UAAQ,EAACC,QAAQ,UAAUC,MAAM,SAASxD,UAAU,YAAzD,UACC,oBAAGA,UAAU,cAAb,UAA4BiD,EAAKQ,OAAjC,iBACA,wBAAQzD,UAAU,oBAAoBC,QAASiD,EAA/C,gCAID,eAAC,MAAD,CACClD,UAAU,2BACVuD,QAAQ,SACRC,MAAM,SACNF,UAAQ,EAJT,UAMC,cAAC,IAAD,CACCI,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAG,aACHE,OAAK,EAJN,uBAQA,cAAC,IAAD,CACCH,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAG,IACHE,OAAK,EAJN,iBAQA,cAAC,IAAD,CACCH,gBAAgB,WAChB1D,UAAU,yBACV2D,GAAG,UACHE,OAAK,EAJN,8BCHUI,EA9DE,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KACnB,EAAkCiB,qBAAWC,GAArCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,SACjBC,EAAWC,EAAQ,IA2BjBpD,EAAWqD,sBAAYF,GAXJ,SAACtC,EAAWC,GACpC,IAAMwC,EAAWJ,EAASrC,GAC1BoC,EACCM,IAAOL,EAAU,CAChBM,QAAS,CACR,CAAC3C,EAAW,GACZ,CAACC,EAAY,EAAGwC,SAKoC,KAAM,CAACJ,IAQ/D,OACC,sBAAKrE,UAAU,kBAAf,UACC,oBAAIA,UAAU,WAAd,SACEiD,EACEA,EAAK2B,KAAI,SAACC,EAAMC,GAChB,OACC,cAAC,EAAD,CACC3D,SAAUA,EACVD,MAAO4D,EACPjF,KAAMgF,EAAKhF,KACXoB,WAAY4D,EAAK5D,WAEjBF,YAAa,kBAvCJ,SAACK,GACjB,IAAI2D,EAAUV,EACKU,EAAQC,QAAO,SAACH,GAAD,OAAUA,EAAKzD,KAAOA,KAC3C,GAAGH,YAAa,EAC7BmD,EAAY,YAAIW,IAChBrC,QAAQC,IAAI,WAAYvB,GAkCE6D,CAASJ,EAAKzD,KACjCJ,cAAe,kBA9CN,SAACI,GACjB,IACI8D,EADUb,EACYW,QAAO,SAACH,GAAD,OAAUA,EAAKzD,KAAOA,KACvDgD,EAAYc,GA2CgBC,CAASN,EAAKzD,KACnCA,GAAIyD,EAAKzD,IAHJyD,EAAKzD,OAOZ,OAEJ,cAAC,EAAD,CAAW8B,eA1BW,WACvB,IACIkC,EADUf,EACYW,QAAO,SAACH,GAAD,OAA8B,IAApBA,EAAK5D,cAChDmD,EAAYgB,IAuBiCnC,KAAMA,QCvDtCoC,EAJH,SAAC,GAAc,IAAZpC,EAAW,EAAXA,KACd,OAAO,cAAC,EAAD,CAAUA,KAAMA,KCOTqC,G,MATG,SAAC,GAAc,IAC5BC,EAD2B,EAAXtC,KACM+B,QAAO,SAACH,GAAD,OAA8B,IAApBA,EAAK5D,cAChD,OACC,8BACC,cAAC,EAAD,CAAUgC,KAAMsC,QCQJC,EAZA,SAAC,GAAc,IAAZvC,EAAW,EAAXA,KACjB,EAA8BwC,mBAAS,YAAIxC,IAA3C,mBAAO8B,EAAP,KAEIW,GAFJ,KAEkBX,EAAQC,QAAO,SAACH,GAAD,OAA8B,IAApBA,EAAK5D,eAEhD,OACC,8BACC,cAAC,EAAD,CAAUgC,KAAMyC,O,gCCINvB,EAAcwB,0BAoGZC,MAlGf,WACC,MAAwBH,mBAAS,CAAE5F,KAAM,GAAIuB,GAAI,EAAGH,YAAY,IAAhE,mBAAO4D,EAAP,KAAagB,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiBD,EAAjB,KACA,EAA4BqB,oBAAS,GAArC,mBAAOK,EAAP,KAAeC,EAAf,KAMMC,EAAa,WAClBH,EAAQ,2BAAKhB,GAAN,IAAYzD,IAAqB,IAAhB6E,KAAKC,UAAgBC,QAAQ,MACrD/B,EAAY,GAAD,mBAAKC,GAAL,CAAeQ,MAGrBuB,EAAkB,WACvB,IAAMC,EAAOC,SAASC,qBAAqB,QACvC9F,EAAQ+F,OAAOC,YAEJ,IAAXX,GAAoBrF,EAAQ,IAC/B4F,EAAK,GAAGK,MAAMC,gBAAkB,wCACX,IAAXb,GAAoBrF,EAAQ,IACtC4F,EAAK,GAAGK,MAAMC,gBAAkB,uCACX,IAAXb,GAAmBrF,EAAQ,IACrC4F,EAAK,GAAGK,MAAMC,gBAAkB,uCACX,IAAXb,GAAmBrF,EAAQ,MACrC4F,EAAK,GAAGK,MAAMC,gBAAkB,uCAqBlC,OAXAC,qBAAU,WACTR,MACE,CAACN,IACJU,OAAOK,OAAST,EAChBI,OAAOM,SAAWV,EAQjB,cAACjC,EAAY4C,SAAb,CAAsBnH,MAAO,CAAEwE,cAAaC,YAA5C,SACC,cAAC,IAAD,CAAQ2C,SAAUpD,oBAAlB,SACC,cAACqD,EAAA,EAAD,CAAaC,QAASC,IAAtB,SACC,cAAC,MAAD,CAAK5D,QAAQ,SAAb,SACC,cAAC,MAAD,CAAKO,GAAI,GAAIE,GAAI,EAAGb,GAAI,EAAGC,GAAI,EAA/B,SACC,sBAAKpD,UAAU,MAAf,UACC,eAAC,MAAD,CACCsD,UAAQ,EACRtD,UAAU,SACVwD,MAAM,SACND,QAAQ,UAJT,UAMC,wCACA,wBACCvD,UAAU,wBACVC,QAAS,kBAhCNqG,SAASC,qBAAqB,QACpC,GAAGa,UAAUC,OAAO,aACzBtB,GAAWD,IA4BJ,SAIEA,EAAS,cAAC,IAAD,IAAY,cAAC,IAAD,SAGxB,cAAC,EAAD,CACCnG,cA/DY,SAAC2H,GACpBzB,EAAQ,2BAAKhB,GAAN,IAAYhF,KAAMyH,EAAEC,OAAO3H,UA+D3BA,MAAOiF,EAAKhF,KACZA,KAAK,YACLC,aAAckG,EACdjG,QAAS,SAACuH,GAAD,OA/BD,SAACA,GACC,IAAbA,EAAEE,SACLxB,IA6BsBjG,CAAQuH,MAEzB,eAAC,IAAD,WACC,cAAC,IAAD,CACCG,KAAK,IACL5D,OAAK,EACL6D,UAAW,kBAAM,cAAC,EAAD,CAAKzE,KAAMoB,OAE7B,cAAC,IAAD,CACCoD,KAAK,aACLC,UAAW,kBAAM,cAAC,EAAD,CAAWzE,KAAMoB,OAEnC,cAAC,IAAD,CACCoD,KAAK,UACLC,UAAW,kBAAM,cAAC,EAAD,CAAQzE,KAAMoB,wBC1F1BsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDhC,SAASiC,eAAe,SAMzBZ,M","file":"static/js/main.563c8738.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Input = ({ changeHandler, value, name, clickHandler, keydown }) => {\r\n\treturn (\r\n\t\t<div className=\"input__wrapper\">\r\n\t\t\t<button className=\"input__button\" onClick={clickHandler}></button>\r\n\t\t\t<input\r\n\t\t\t\tautocomplete=\"off\"\r\n\t\t\t\tonKeyDown={keydown}\r\n\t\t\t\tclassName=\"input\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={changeHandler}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tname={name}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n","export const ItemTypes = {\r\n\tCARD: \"card\",\r\n};\r\n","import React from \"react\";\r\n\r\nconst CrossIcon = () => {\r\n\treturn (\r\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\">\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#494C6B\"\r\n\t\t\t\tfillRule=\"evenodd\"\r\n\t\t\t\td=\"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default CrossIcon;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { ItemTypes } from \"../Utils/itemTypes\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport CrossIcon from \"../svgs/CrossIcon\";\r\nimport { BiCheck } from \"react-icons/bi\";\r\n\r\nconst Task = ({\r\n\tdoneHandler,\r\n\tdeleteHandler,\r\n\tisFinished,\r\n\tname,\r\n\tindex,\r\n\tmoveTask,\r\n\tid,\r\n}) => {\r\n\tconst ref = useRef(null);\r\n\r\n\tconst [{ handlerId }, drop] = useDrop({\r\n\t\taccept: ItemTypes.CARD,\r\n\t\tcollect(monitor) {\r\n\t\t\treturn {\r\n\t\t\t\thandlerId: monitor.getHandlerId(),\r\n\t\t\t};\r\n\t\t},\r\n\t\thover(item, monitor) {\r\n\t\t\tif (!ref.current) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst dragIndex = item.index;\r\n\t\t\tconst hoverIndex = index;\r\n\t\t\t// console.log(\"dragIndex\", dragIndex);\r\n\t\t\t// console.log(\"hoverindex\", hoverIndex);\r\n\r\n\t\t\tif (dragIndex === hoverIndex) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Determine rectangle on screen\r\n\t\t\tconst hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n\t\t\t// Get vertical middle\r\n\t\t\tconst hoverMiddleY =\r\n\t\t\t\t(hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n\t\t\t// Determine mouse position\r\n\t\t\tconst clientOffset = monitor.getClientOffset();\r\n\t\t\t// Get pixels to the top\r\n\t\t\tconst hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n\t\t\tconsole.log(hoverClientY);\r\n\t\t\t// Only perform the move when the mouse has crossed half of the items height\r\n\t\t\t// When dragging downwards, only move when the cursor is below 50%\r\n\t\t\t// When dragging upwards, only move when the cursor is above 50%\r\n\t\t\t// Dragging downwards\r\n\r\n\t\t\tif (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// Dragging upwards\r\n\t\t\tif (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tmoveTask(dragIndex, hoverIndex);\r\n\r\n\t\t\titem.index = hoverIndex;\r\n\t\t},\r\n\t});\r\n\t// console.log(handlerId);\r\n\tconst [{ isDragging }, drag] = useDrag({\r\n\t\ttype: ItemTypes.CARD,\r\n\t\titem: () => {\r\n\t\t\treturn { id, index };\r\n\t\t},\r\n\t\tcollect: (monitor) => ({\r\n\t\t\tisDragging: monitor.isDragging(),\r\n\t\t}),\r\n\t});\r\n\tdrag(drop(ref));\r\n\r\n\treturn (\r\n\t\t<li className=\"taskList__item\" ref={ref} data-handler-id={handlerId}>\r\n\t\t\t<button\r\n\t\t\t\tclassName={`done__button ${isFinished ? \"done\" : \"\"}`}\r\n\t\t\t\tonClick={doneHandler}\r\n\t\t\t>\r\n\t\t\t\t{isFinished ? <BiCheck /> : null}\r\n\t\t\t</button>\r\n\t\t\t{isFinished ? (\r\n\t\t\t\t<strike className=\"done__task\">{name}</strike>\r\n\t\t\t) : (\r\n\t\t\t\t<span>{name}</span>\r\n\t\t\t)}\r\n\r\n\t\t\t<button className=\"delete__button\" onClick={deleteHandler}>\r\n\t\t\t\t<CrossIcon />\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Row, Visible, Hidden } from \"react-grid-system\";\r\n\r\nconst BottomNav = ({ list, clearCompleted }) => {\r\n\treturn (\r\n\t\t<div className=\"footer\">\r\n\t\t\t<Visible lg xl xxl>\r\n\t\t\t\t<Row nogutter justify=\"between\" align=\"center\" className=\"bottomNav\">\r\n\t\t\t\t\t<p className=\"items__left\">{list.length} items left</p>\r\n\t\t\t\t\t<div className=\"bottomNav__links\">\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\t\tto={process.env.PUBLIC_URL + \"/completed\"}\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tCompleted\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\t\tto={process.env.PUBLIC_URL + \"/\"}\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAll\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\t\tto={process.env.PUBLIC_URL + \"/active\"}\r\n\t\t\t\t\t\t\texact\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"bottomNav__button\" onClick={clearCompleted}>\r\n\t\t\t\t\t\tClear Completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Row>\r\n\t\t\t</Visible>\r\n\t\t\t{/* mobile view */}\r\n\t\t\t<Visible xs sm md>\r\n\t\t\t\t<Row nogutter justify=\"between\" align=\"center\" className=\"bottomNav\">\r\n\t\t\t\t\t<p className=\"items__left\">{list.length} items left</p>\r\n\t\t\t\t\t<button className=\"bottomNav__button\" onClick={clearCompleted}>\r\n\t\t\t\t\t\tClear Completed\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row\r\n\t\t\t\t\tclassName=\"bottomNav__Links__mobile\"\r\n\t\t\t\t\tjustify=\"center\"\r\n\t\t\t\t\talign=\"center\"\r\n\t\t\t\t\tnogutter\r\n\t\t\t\t>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\tto=\"/completed\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCompleted\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\tto=\"/\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAll\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\tactiveClassName=\"selected\"\r\n\t\t\t\t\t\tclassName=\"bottomNav__Links__item\"\r\n\t\t\t\t\t\tto=\"/Active\"\r\n\t\t\t\t\t\texact\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tActive\r\n\t\t\t\t\t</NavLink>\r\n\t\t\t\t</Row>\r\n\t\t\t</Visible>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BottomNav;\r\n","import React, { useCallback, useContext, useEffect } from \"react\";\r\nimport { TaskContext } from \"../App\";\r\nimport Task from \"./Task\";\r\nimport update from \"immutability-helper\";\r\nimport BottomNav from \"./BottomNav\";\r\n\r\nconst Tasklist = ({ list }) => {\r\n\tconst { settasklist, tasklist } = useContext(TaskContext);\r\n\tvar debounce = require(\"lodash.debounce\");\r\n\r\n\tconst onDelete = (id) => {\r\n\t\tlet newlist = tasklist;\r\n\t\tlet updatedlist = newlist.filter((task) => task.id !== id);\r\n\t\tsettasklist(updatedlist);\r\n\t};\r\n\r\n\tconst doneTask = (id) => {\r\n\t\tlet newlist = tasklist;\r\n\t\tlet finishedTask = newlist.filter((task) => task.id === id);\r\n\t\tfinishedTask[0].isFinished = true;\r\n\t\tsettasklist([...newlist]);\r\n\t\tconsole.log(\"donetask\", id);\r\n\t};\r\n\r\n\tconst moveTaskDebounce = (dragIndex, hoverIndex) => {\r\n\t\tconst dragTask = tasklist[dragIndex];\r\n\t\tsettasklist(\r\n\t\t\tupdate(tasklist, {\r\n\t\t\t\t$splice: [\r\n\t\t\t\t\t[dragIndex, 1],\r\n\t\t\t\t\t[hoverIndex, 0, dragTask],\r\n\t\t\t\t],\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\tconst moveTask = useCallback(debounce(moveTaskDebounce, 100), [tasklist]);\r\n\r\n\tconst deleteCompleted = () => {\r\n\t\tlet newlist = tasklist;\r\n\t\tlet updatedList = newlist.filter((task) => task.isFinished === false);\r\n\t\tsettasklist(updatedList);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"taskListwrapper\">\r\n\t\t\t<ul className=\"taskList\">\r\n\t\t\t\t{list\r\n\t\t\t\t\t? list.map((task, i) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\t\t\tmoveTask={moveTask}\r\n\t\t\t\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\t\t\t\tname={task.name}\r\n\t\t\t\t\t\t\t\t\tisFinished={task.isFinished}\r\n\t\t\t\t\t\t\t\t\tkey={task.id}\r\n\t\t\t\t\t\t\t\t\tdoneHandler={() => doneTask(task.id)}\r\n\t\t\t\t\t\t\t\t\tdeleteHandler={() => onDelete(task.id)}\r\n\t\t\t\t\t\t\t\t\tid={task.id}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: null}\r\n\t\t\t</ul>\r\n\t\t\t<BottomNav clearCompleted={deleteCompleted} list={list} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tasklist;\r\n","import React, { useEffect } from \"react\";\r\nimport Task from \"./Task\";\r\nimport Tasklist from \"./Tasklist\";\r\n\r\nconst All = ({ list }) => {\r\n\treturn <Tasklist list={list} />;\r\n};\r\n\r\nexport default All;\r\n","import React from \"react\";\r\nimport Tasklist from \"./Tasklist\";\r\n\r\nconst Completed = ({ list }) => {\r\n\tlet completedTasks = list.filter((task) => task.isFinished === true);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Tasklist list={completedTasks} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Completed;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Tasklist from \"./Tasklist\";\r\n\r\nconst Active = ({ list }) => {\r\n\tconst [newlist, setnewlist] = useState([...list]);\r\n\r\n\tlet activeTasks = newlist.filter((task) => task.isFinished === false);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Tasklist list={activeTasks} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Active;\r\n","import React, { createContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Input from \"./components/Input\";\nimport All from \"./components/All\";\nimport \"./css/main.css\";\nimport Completed from \"./components/Completed\";\nimport Active from \"./components/Active\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { Col, Row } from \"react-grid-system\";\nimport { FiSun } from \"react-icons/fi\";\nimport { RiMoonFill } from \"react-icons/ri\";\nimport BottomNav from \"./components/BottomNav\";\n\nexport const TaskContext = createContext();\n\nfunction App() {\n\tconst [task, settask] = useState({ name: \"\", id: 0, isFinished: false });\n\tconst [tasklist, settasklist] = useState([]);\n\tconst [isDark, setIsDark] = useState(false);\n\n\tconst updateField = (e) => {\n\t\tsettask({ ...task, name: e.target.value });\n\t};\n\n\tconst createTask = () => {\n\t\tsettask({ ...task, id: (Math.random() * 100).toFixed(0) });\n\t\tsettasklist([...tasklist, task]);\n\t};\n\n\tconst backGroundImage = () => {\n\t\tconst body = document.getElementsByTagName(\"body\");\n\t\tlet width = window.innerWidth;\n\n\t\tif (isDark === false && width > 768) {\n\t\t\tbody[0].style.backgroundImage = 'url(\"./Images/bg-desktop-light.jpg\")';\n\t\t} else if (isDark === false && width < 768) {\n\t\t\tbody[0].style.backgroundImage = 'url(\"./Images/bg-mobile-light.jpg\")';\n\t\t} else if (isDark === true && width > 768) {\n\t\t\tbody[0].style.backgroundImage = 'url(\"./Images/bg-desktop-dark.jpg\")';\n\t\t} else if (isDark === true && width < 768) {\n\t\t\tbody[0].style.backgroundImage = 'url(\"./Images/bg-mobile-dark.jpg\")';\n\t\t}\n\t};\n\n\tconst themeToggle = () => {\n\t\tlet body = document.getElementsByTagName(\"body\");\n\t\tbody[0].classList.toggle(\"dark\");\n\t\tsetIsDark(!isDark);\n\t};\n\n\tuseEffect(() => {\n\t\tbackGroundImage();\n\t}, [isDark]);\n\twindow.onload = backGroundImage;\n\twindow.onresize = backGroundImage;\n\n\tconst keydown = (e) => {\n\t\tif (e.keyCode == 13) {\n\t\t\tcreateTask();\n\t\t}\n\t};\n\treturn (\n\t\t<TaskContext.Provider value={{ settasklist, tasklist }}>\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t\t\t<Row justify=\"center\">\n\t\t\t\t\t\t<Col xs={11} md={8} lg={6} xl={6}>\n\t\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\t\t\tnogutter\n\t\t\t\t\t\t\t\t\tclassName=\"header\"\n\t\t\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\t\t\tjustify=\"between\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>TODO</span>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName=\"theme__toggle__button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => themeToggle()}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{isDark ? <FiSun /> : <RiMoonFill />}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tchangeHandler={updateField}\n\t\t\t\t\t\t\t\t\tvalue={task.name}\n\t\t\t\t\t\t\t\t\tname=\"task.name\"\n\t\t\t\t\t\t\t\t\tclickHandler={createTask}\n\t\t\t\t\t\t\t\t\tkeydown={(e) => keydown(e)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath=\"/\"\n\t\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <All list={tasklist} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath=\"/completed\"\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Completed list={tasklist} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\t\tpath=\"/active\"\n\t\t\t\t\t\t\t\t\t\tcomponent={() => <Active list={tasklist} />}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</DndProvider>\n\t\t\t</Router>\n\t\t</TaskContext.Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}